<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>寒假训练</title>
      <link href="/2025/01/05/%E7%AC%94%E8%AE%B0/2/"/>
      <url>/2025/01/05/%E7%AC%94%E8%AE%B0/2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>苍穹外卖学习</title>
      <link href="/2025/01/05/%E7%AC%94%E8%AE%B0/project/"/>
      <url>/2025/01/05/%E7%AC%94%E8%AE%B0/project/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="1-第一天-2025-01-05"><a href="#1-第一天-2025-01-05" class="headerlink" title="1. 第一天 2025-01-05"></a>1. 第一天 2025-01-05</h3><hr><h4 id="1-1-零碎知识点"><a href="#1-1-零碎知识点" class="headerlink" title="1.1 零碎知识点"></a>1.1 零碎知识点</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">BeanUtils.copyProperties(a,b); //a的属性拷贝到b 实体对象拷贝</span><br><span class="line">DigestUtils.md5DigestAsHex(password.getBytes()); //密码加密</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="1-2-ThreadLocal"><a href="#1-2-ThreadLocal" class="headerlink" title="1.2 ThreadLocal"></a>1.2 ThreadLocal</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">ThreadLocal   //线程本地变量</span><br><span class="line">public void set(T value) //设置当前线程的局部变量</span><br><span class="line">public T get() //获取当前线程对应的局部变量</span><br><span class="line">public void remove() //移除当前线程对应的局部变量</span><br><span class="line">//在工程中运用时通常会封装一个类，用于设置和获取值</span><br><span class="line">public class BaseContext &#123;</span><br><span class="line"></span><br><span class="line">    public static ThreadLocal&lt;Long&gt; threadLocal = new ThreadLocal&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    public static void setCurrentId(Long id) &#123;</span><br><span class="line">        threadLocal.set(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static Long getCurrentId() &#123;</span><br><span class="line">        return threadLocal.get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void removeCurrentId() &#123;</span><br><span class="line">        threadLocal.remove();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-3-pageHelper-记住-PageHelper-后面要直接跟查询语句"><a href="#1-3-pageHelper-记住-PageHelper-后面要直接跟查询语句" class="headerlink" title="1.3 pageHelper 记住 PageHelper 后面要直接跟查询语句"></a>1.3 pageHelper 记住 PageHelper 后面要直接跟查询语句</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">PageHelper.startPage(page, pageSize); <span class="comment">//分页</span></span><br><span class="line">Page&lt;Order&gt; page = orderService.list(page, pageSize); <span class="comment">//返回分页对象</span></span><br><span class="line">page.getTotal(); <span class="comment">//总记录数</span></span><br><span class="line">page.getResults(); <span class="comment">//当前页数据</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PageBean</span>&lt;&gt;(page.getTotal(), page.getResults()); <span class="comment">//封装返回对象</span></span><br><span class="line">PageHelper.startPage(currentPage, pageSize);</span><br><span class="line">List&lt;Student&gt; students = adminMapper.vaguequery1(studentPageTeacher.getStudent());</span><br><span class="line">PageInfo&lt;Student&gt; pageInfo = <span class="keyword">new</span> <span class="title class_">PageInfo</span>&lt;&gt;(students);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PageBean</span>&lt;&gt;(pageInfo.getTotal(), students);</span><br></pre></td></tr></table></figure><h4 id="1-4-MybatisPlus"><a href="#1-4-MybatisPlus" class="headerlink" title="1.4 MybatisPlus"></a>1.4 MybatisPlus</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实体类</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@TableName(&quot;user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="meta">@TableId(type = IdType.AUTO)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> String idNumber;</span><br><span class="line">    <span class="keyword">private</span> String avatar; <span class="comment">//头像</span></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line">    <span class="keyword">private</span> Date updateTime;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-5-处理日期格式"><a href="#1-5-处理日期格式" class="headerlink" title="1.5 处理日期格式"></a>1.5 处理日期格式</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">方式一: 在实体类中添加注解</span><br><span class="line"><span class="meta">@JsonFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;, timezone = &quot;GMT+8&quot;)</span></span><br><span class="line"><span class="keyword">private</span> LocalDateTime createTime;</span><br><span class="line">方式二: 在WebMvcConfiguration中添加</span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">extendMessageConverters</span><span class="params">(List&lt;HttpMessageConverter&lt;?&gt;&gt; converters)</span> &#123;</span><br><span class="line">        <span class="type">MappingJackson2HttpMessageConverter</span> <span class="variable">converter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MappingJackson2HttpMessageConverter</span>();</span><br><span class="line">        converter.setObjectMapper(<span class="keyword">new</span> <span class="title class_">JacksonObjectMapper</span>());</span><br><span class="line">        converters.add(<span class="number">0</span>, converter);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-6-Builder-构建器"><a href="#1-6-Builder-构建器" class="headerlink" title="1.6 Builder 构建器"></a>1.6 Builder 构建器</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Builder</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> String idNumber;</span><br><span class="line">    <span class="keyword">private</span> String avatar; <span class="comment">//头像</span></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line">    <span class="keyword">private</span> Date updateTime;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> User.builder().name(<span class="string">&quot;张三&quot;</span>).build(); <span class="comment">//类似于 new User(&quot;张三&quot;);</span></span><br></pre></td></tr></table></figure><h4 id="1-7-Apache-POI-Excel"><a href="#1-7-Apache-POI-Excel" class="headerlink" title="1.7 Apache POI Excel"></a>1.7 Apache POI Excel</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在内存中创建一个Excel</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">write</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="comment">//在内存中创建一个Excel</span></span><br><span class="line">    <span class="type">XSSFWorkbook</span> <span class="variable">excel</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">XSSFWorkbook</span>();</span><br><span class="line">    <span class="type">XSSFSheet</span> <span class="variable">info</span> <span class="operator">=</span> excel.createSheet(<span class="string">&quot;info&quot;</span>);</span><br><span class="line">    <span class="type">XSSFRow</span> <span class="variable">row</span> <span class="operator">=</span> info.createRow(<span class="number">0</span>);</span><br><span class="line">    row.createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;姓名&quot;</span>);</span><br><span class="line">    row.createCell(<span class="number">1</span>).setCellValue(<span class="string">&quot;年龄&quot;</span>);</span><br><span class="line">    <span class="comment">//创建第二行</span></span><br><span class="line">    row = info.createRow(<span class="number">1</span>);</span><br><span class="line">    row.createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    row.createCell(<span class="number">1</span>).setCellValue(<span class="string">&quot;18&quot;</span>);</span><br><span class="line">    row = info.createRow(<span class="number">2</span>);</span><br><span class="line">    row.createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">    row.createCell(<span class="number">1</span>).setCellValue(<span class="string">&quot;19&quot;</span>);        <span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;D:\\xsls\\info.xlsx&quot;</span>));</span><br><span class="line">    excel.write(fileOutputStream);</span><br><span class="line">    excel.close();</span><br><span class="line">    fileOutputStream.close();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//读取Excel</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">read</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">      <span class="type">XSSFWorkbook</span> <span class="variable">excel</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">XSSFWorkbook</span>(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;D:\\xsls\\info.xlsx&quot;</span>));</span><br><span class="line">      <span class="type">XSSFSheet</span> <span class="variable">info</span> <span class="operator">=</span> excel.getSheet(<span class="string">&quot;info&quot;</span>);</span><br><span class="line">      log.info(<span class="string">&quot;info:&#123;&#125;&quot;</span>, info);</span><br><span class="line">      <span class="comment">//获取最后一行行号</span></span><br><span class="line">      <span class="type">int</span> <span class="variable">lastRowNum</span> <span class="operator">=</span> info.getLastRowNum();</span><br><span class="line">      log.info(<span class="string">&quot;lastRowNum:&#123;&#125;&quot;</span>, lastRowNum);</span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; info.getPhysicalNumberOfRows(); i++) &#123;</span><br><span class="line">            <span class="type">XSSFRow</span> <span class="variable">row</span> <span class="operator">=</span> info.getRow(i);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; row.getPhysicalNumberOfCells(); j++) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;row:&#123;&#125;,col:&#123;&#125;,value:&#123;&#125;&quot;</span>, i, j, row.getCell(j));</span><br><span class="line">        &#125;</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//导出Excel</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">ServletOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> response.getOutputStream();</span><br><span class="line">excel.write(outputStream);</span><br></pre></td></tr></table></figure><h4 id="1-8-SpringTask"><a href="#1-8-SpringTask" class="headerlink" title="1.8 SpringTask"></a>1.8 SpringTask</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>swagger</title>
      <link href="/2025/01/05/%E7%AC%94%E8%AE%B0/swagger/"/>
      <url>/2025/01/05/%E7%AC%94%E8%AE%B0/swagger/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="swagger"><a href="#swagger" class="headerlink" title="swagger"></a>swagger</h2><h3 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h3><ul><li>swagger 是一个用于生成、描述、调用和可视化 RESTful API 的开源项目。</li><li>swagger 是一个规范和完整的框架，用于生成、描述、调用和可视化 RESTful 风格的 Web 服务。</li><li>使用 swagger 你可以自动生成 API 文档，支持在线测试。</li></ul><h3 id="2-使用"><a href="#2-使用" class="headerlink" title="2. 使用"></a>2. 使用</h3><hr><h4 id="1-引入依赖"><a href="#1-引入依赖" class="headerlink" title="1. 引入依赖"></a>1. 引入依赖</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.github.xiaoymin&lt;/groupId&gt;</span><br><span class="line">     &lt;artifactId&gt;knife4j-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">     &lt;version&gt;3.0.3&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a>2. 配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">@EnableSwagger2</span><br><span class="line">public class SwaggerConfig &#123;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    public Docket createRestApi() &#123;</span><br><span class="line">        return new Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">                .apiInfo(apiInfo())</span><br><span class="line">                .select()</span><br><span class="line">                .apis(RequestHandlerSelectors.basePackage(&quot;com.example.demo.controller&quot;))  //扫描的包</span><br><span class="line">                .paths(PathSelectors.any())</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private ApiInfo apiInfo() &#123;</span><br><span class="line">        return new ApiInfoBuilder()</span><br><span class="line">                .title(&quot;Swagger API文档&quot;)</span><br><span class="line">                .description(&quot;Swagger API文档&quot;)</span><br><span class="line">                .version(&quot;2.0&quot;)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-设置静态资源访问"><a href="#3-设置静态资源访问" class="headerlink" title="3.设置静态资源访问"></a>3.设置静态资源访问</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">public class WebMvcConfig implements WebMvcConfigurer &#123;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void addResourceHandlers(ResourceHandlerRegistry registry) &#123;</span><br><span class="line">        registry.addResourceHandler(&quot;doc.html&quot;).addResourceLocations(&quot;classpath:/META-INF/resources/&quot;);</span><br><span class="line">        registry.addResourceHandler(&quot;/webjars/**&quot;).addResourceLocations(&quot;classpath:/META-INF/resources/webjars/&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-注解"><a href="#4-注解" class="headerlink" title="4.注解"></a>4.注解</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@Api 用在类上，说明该类的作用，例如controller</span><br><span class="line">@ApiOperation 用在方法上，说明方法的作用，例如接口</span><br><span class="line">@ApiModel 用在类上，说明实体类的作用 DTO,VO,pojo</span><br><span class="line">@ApiModelProperty 用在类属性上，说明属性的作用</span><br></pre></td></tr></table></figure><h3 id="5-示例"><a href="#5-示例" class="headerlink" title="5.示例"></a>5.示例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Api(value = &quot;用户管理&quot;, tags = &quot;用户管理&quot;)</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;获取用户列表&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/list&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">list</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userService.list();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;根据id获取用户&quot;)</span></span><br><span class="line">    <span class="meta">@ApiImplicitParam(name = &quot;id&quot;, value = &quot;用户id&quot;, required = true, dataType = &quot;int&quot;, paramType = &quot;path&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">get</span><span class="params">(<span class="meta">@PathVariable</span> Integer id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userService.get(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><hr><h2 id="end"><a href="#end" class="headerlink" title="end "></a>end </h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>English</title>
      <link href="/2025/01/04/%E7%AC%94%E8%AE%B0/English/"/>
      <url>/2025/01/04/%E7%AC%94%E8%AE%B0/English/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><hr>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ts</title>
      <link href="/2025/01/04/%E7%AC%94%E8%AE%B0/ts/"/>
      <url>/2025/01/04/%E7%AC%94%E8%AE%B0/ts/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ts"><a href="#ts" class="headerlink" title="ts"></a>ts</h1><h2 id="1-数组"><a href="#1-数组" class="headerlink" title="1. 数组"></a>1. 数组</h2><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">let arr: string[]</span><br><span class="line">arr = [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;]</span><br><span class="line">let arr: Array&lt;string&gt; 泛型写法</span><br></pre></td></tr></table></figure><hr><h2 id="2-枚举"><a href="#2-枚举" class="headerlink" title="2. 枚举"></a>2. 枚举</h2><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">enum Direction &#123;</span><br><span class="line"> Up,</span><br><span class="line"> Down,</span><br><span class="line"> Left,</span><br><span class="line"> Right</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">console.log(Direction.Up) // 0</span><br><span class="line">console.log(Direction[0]) // Up</span><br><span class="line">function move(direction: Direction) &#123;</span><br><span class="line">    console.log(direction)</span><br><span class="line">if (direction === Direction.Up) &#123;</span><br><span class="line">    console.log(&#x27;Moving up&#x27;)</span><br><span class="line"> &#125;else if (direction === Direction.Down) &#123;</span><br><span class="line">    console.log(&#x27;Moving down&#x27;)</span><br><span class="line"> &#125;else if (direction === Direction.Left) &#123;</span><br><span class="line">    console.log(&#x27;Moving left&#x27;)</span><br><span class="line"> &#125;else if (direction === Direction.Right) &#123;</span><br><span class="line">     console.log(&#x27;Moving right&#x27;)</span><br><span class="line"> &#125;else &#123;</span><br><span class="line">    console.log(&#x27;Unknown direction&#x27;)</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">move(Direction.Up)</span><br></pre></td></tr></table></figure><hr><h2 id="3-type"><a href="#3-type" class="headerlink" title="3. type"></a>3. type</h2><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">type Name = string</span><br><span class="line">type NameResolver = () =&gt; string</span><br><span class="line">type NameOrResolver = Name | NameResolver</span><br><span class="line">function getName(n: NameOrResolver): Name &#123;</span><br><span class="line"> if (typeof n === &#x27;string&#x27;) &#123;</span><br><span class="line">    return n</span><br><span class="line"> &#125;else &#123;</span><br><span class="line">    return n()</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="4-交叉类型"><a href="#4-交叉类型" class="headerlink" title="4.交叉类型"></a>4.交叉类型</h2><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">// 交叉类型</span><br><span class="line">type person = &#123;</span><br><span class="line">    name: string,</span><br><span class="line">    age: number</span><br><span class="line">&#125;</span><br><span class="line">type person2 = &#123;</span><br><span class="line">    gender: string</span><br><span class="line">&#125;</span><br><span class="line">type person4 = person &amp; person2</span><br><span class="line"></span><br><span class="line">let person4: person4 = &#123;</span><br><span class="line">    name: &#x27;John&#x27;,</span><br><span class="line">    age: 30,</span><br><span class="line">    gender: &#x27;male&#x27;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="5-类-类似于-java"><a href="#5-类-类似于-java" class="headerlink" title="5. 类 类似于 java"></a>5. 类 类似于 java</h2><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">class Person &#123;</span><br><span class="line">    name: string</span><br><span class="line">    age: number</span><br><span class="line">    constructor(name: string, age: number) &#123;</span><br><span class="line">        this.name = name</span><br><span class="line">        this.age = age</span><br><span class="line">    &#125;</span><br><span class="line">    sayHello() &#123;</span><br><span class="line">        console.log(`Hello, my name is $&#123;this.name&#125; and I am $&#123;this.age&#125; years old.`)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">let person = new Person(&#x27;John&#x27;, 30)</span><br><span class="line">person.sayHello()</span><br><span class="line"></span><br><span class="line">class Student extends Person &#123;</span><br><span class="line">    studentId: number</span><br><span class="line">    constructor(name: string, age: number, studentId: number) &#123;</span><br><span class="line">        super(name, age)</span><br><span class="line">        this.studentId = studentId</span><br><span class="line">    &#125;</span><br><span class="line">    sayHello() &#123;</span><br><span class="line">        console.log(`Hello, my name is $&#123;this.name&#125; and I am $&#123;this.age&#125; years old. My student ID is $&#123;this.studentId&#125;.`)</span><br><span class="line">    &#125;</span><br><span class="line">    override sayHello() &#123;</span><br><span class="line">        console.log(`Hello, my name is $&#123;this.name&#125; and I am $&#123;this.age&#125; years old. My student ID is $&#123;this.studentId&#125;.`)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">const student = new Student(&#x27;John&#x27;, 30, 123456)</span><br><span class="line">student.sayHello()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">属性的简写</span><br><span class="line">class Person&#123;</span><br><span class="line">    constructor(</span><br><span class="line">        public name:string,</span><br><span class="line">        public age: number</span><br><span class="line">    ) &#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line">Person p = new Person(&#x27;John&#x27;, 30)</span><br><span class="line">console.log(p.name)</span><br><span class="line">console.log(p.age)</span><br></pre></td></tr></table></figure><hr><h2 id="6-修饰符"><a href="#6-修饰符" class="headerlink" title="6. 修饰符"></a>6. 修饰符</h2><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">class Person &#123;</span><br><span class="line">    private name: string</span><br><span class="line">    private age: number</span><br><span class="line">    constructor(name: string, age: number) &#123;</span><br><span class="line">        this.name = name</span><br><span class="line">        this.age = age</span><br><span class="line">    &#125;</span><br><span class="line">    sayHello() &#123;</span><br><span class="line">        console.log(`Hello, my name is $&#123;this.name&#125; and I am $&#123;this.age&#125; years old.`)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="7-接口"><a href="#7-接口" class="headerlink" title="7. 接口"></a>7. 接口</h3><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">interface Person &#123;</span><br><span class="line">    name: string</span><br><span class="line">    age: number</span><br><span class="line">    sayHello(): void</span><br><span class="line">&#125;</span><br><span class="line">class Student implements Person &#123;</span><br><span class="line">    name: string</span><br><span class="line">    age: number</span><br><span class="line">    constructor(name: string, age: number) &#123;</span><br><span class="line">        this.name = name</span><br><span class="line">        this.age = age</span><br><span class="line">    &#125;</span><br><span class="line">    sayHello() &#123;</span><br><span class="line">        console.log(`Hello, my name is $&#123;this.name&#125; and I am $&#123;this.age&#125; years old.`)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">const student: Person = new Student(&#x27;John&#x27;, 30)</span><br><span class="line">student.sayHello()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">interface Person &#123;</span><br><span class="line">    name: string</span><br><span class="line">    age: number</span><br><span class="line">    sayHello(): void</span><br><span class="line">&#125;</span><br><span class="line">class Student implements Person &#123;</span><br><span class="line">    name: string</span><br><span class="line">    age: number</span><br><span class="line">    studentId: number</span><br><span class="line">    constructor(name: string, age: number, studentId: number) &#123;</span><br><span class="line">        this.name = name</span><br><span class="line">        this.age = age</span><br><span class="line">        this.studentId = studentId</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">接口的可合并</span><br><span class="line">interface Person &#123;</span><br><span class="line">    name: string</span><br><span class="line">    age: number</span><br><span class="line">    sayHello(): void</span><br><span class="line">&#125;</span><br><span class="line">interface Person &#123;</span><br><span class="line">    studentId: number</span><br><span class="line">&#125;</span><br><span class="line">class Student implements Person &#123;</span><br><span class="line">    name: string</span><br><span class="line">    age: number</span><br><span class="line">    studentId: number</span><br><span class="line">    constructor(name: string, age: number, studentId: number) &#123;</span><br><span class="line">        this.name = name</span><br><span class="line">        this.age = age</span><br><span class="line">        this.studentId = studentId</span><br><span class="line">    &#125;</span><br><span class="line">    sayHello() &#123;</span><br><span class="line">        console.log(`Hello, my name is $&#123;this.name&#125; and I am $&#123;this.age&#125; years old.`)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="8-泛型"><a href="#8-泛型" class="headerlink" title="8. 泛型"></a>8. 泛型</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function identity&lt;T&gt;(arg: T): T &#123;</span><br><span class="line">    return arg</span><br><span class="line">&#125;</span><br><span class="line">let output = identity&lt;string&gt;(&#x27;myString&#x27;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">interface GenericIdentityFn&lt;T&gt; &#123;</span><br><span class="line">    (arg: T): T</span><br><span class="line">&#125;</span><br><span class="line">function identity&lt;T&gt;(arg: T): T &#123;</span><br><span class="line">    return arg</span><br><span class="line">&#125;</span><br><span class="line">let myIdentity: GenericIdentityFn&lt;number&gt; = identity</span><br><span class="line">function logData&lt;T&gt; (data: T) &#123;</span><br><span class="line">    console.log(data)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">logData(&#x27;Hello&#x27;)</span><br><span class="line">logData(123)</span><br></pre></td></tr></table></figure><pre><code></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>概率统计</title>
      <link href="/2025/01/01/%E7%AC%94%E8%AE%B0/1/"/>
      <url>/2025/01/01/%E7%AC%94%E8%AE%B0/1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>德摩根律</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>代码演示</title>
      <link href="/2024/12/31/%E4%BB%A3%E7%A0%81%E5%9D%97/%E4%BB%A3%E7%A0%81/"/>
      <url>/2024/12/31/%E4%BB%A3%E7%A0%81%E5%9D%97/%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function test() &#123;</span><br><span class="line">  console.log(&quot;hello 2025&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><p>分为氛围分为氛围分为氛围分为</p><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><p>肥肉隔热隔热为过热</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第一个文章</title>
      <link href="/2024/12/31/%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%96%87%E7%AB%A0/"/>
      <url>/2024/12/31/%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>关清文向郭恬婧道歉 </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>图片文字</title>
      <link href="/2021/01/01/%E5%9B%BE%E7%89%87%E6%96%87%E5%AD%97/1/"/>
      <url>/2021/01/01/%E5%9B%BE%E7%89%87%E6%96%87%E5%AD%97/1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://tse1-mm.cn.bing.net/th/id/OIP-C.Czf6me33BTB3UP6yjqJ0GQHaEo?rs=1&pid=ImgDetMain" alt="111111111"></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
